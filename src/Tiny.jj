PARSER_BEGIN(Tiny)

import java.io.FileInputStream;
import java.io.InputStream;
import java.io.IOException;
import java.io.FileNotFoundException;

public class Tiny {
    public static void main(String[] args) throws ParseException, FileNotFoundException {
        InputStream s;
        if(args.length > 0){
                        String fileName = args[0];
                        s = new FileInputStream(args[0]);
                }

                else {
                    System.out.println(args.length);
                    s = System.in;
                }
        Tiny lexer = new Tiny(s, "UTF-8");
        Token token;

        while ((token = lexer.getNextToken()).kind != EOF) {
            System.out.println("lessema: " + token.image + " --> Token associato: " + tokenImage[token.kind]);
             System.out.println("-------------------");
        }
    }
}

PARSER_END(Tiny)

TOKEN : {
   <ASSIGMENT: ":=">
  | <MULT_DIV: ("/"|"*")>
  | <SUM_DIF: ("-"|"+")>
  | <NUMBER: <NUMBA>>
  | <COMMENT: "{" (~["}"])* "}" >
  | <END: "end">
  | <READFNC: "read">
  | <WRITEFNC: "write">
  | <SEMICOLON: ";">
  | <THEN: "then">
  | <IF: "if">
  | <COMPARISON: ("<"|"="|">")>
  | <REPEAT: "repeat">
  | <UNTIL: "until">
  | <ID: ["A"-"Z","a"-"z"](["A"-"Z", "a"-"z", "0"-"9" ,"_" ])*>
  | <#NUMBA: (["0"-"9"])+>

}

SKIP : {
    < SKIPPED : [" ", "\t", "\n", "\r"] >
}
